generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          String    @id @unique @map("user_id") @db.VarChar(36)
  username    String    @unique @db.VarChar(255)
  password    String    @db.VarChar(60)
  role        String    @map("role") @db.VarChar(50)
  logoUrl     String?   @map("logo_url") @db.VarChar(2183)
  displayName String?   @map("display_name") @db.VarChar(255)
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt   DateTime? @map("deleted_at") @db.Timestamp(0)

  websiteUser       Website[]  @relation("user")
  websiteCreateUser Website[]  @relation("createUser")
  teamUser          TeamUser[]
  report            Report[]

  @@map("user")
}

model Website {
  id        String    @id @unique @map("website_id") @db.VarChar(36)
  name      String    @db.VarChar(100)
  domain    String?   @db.VarChar(500)
  shareId   String?   @unique @map("share_id") @db.VarChar(50)
  resetAt   DateTime? @map("reset_at") @db.Timestamp(0)
  userId    String?   @map("user_id") @db.VarChar(36)
  teamId    String?   @map("team_id") @db.VarChar(36)
  createdBy String?   @map("created_by") @db.VarChar(36)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt DateTime? @map("deleted_at") @db.Timestamp(0)

  user        User?         @relation("user", fields: [userId], references: [id])
  createUser  User?         @relation("createUser", fields: [createdBy], references: [id])
  team        Team?         @relation(fields: [teamId], references: [id])
  eventData   EventData[]
  report      Report[]
  sessionData SessionData[]

  @@index([userId])
  @@index([teamId])
  @@index([createdAt])
  @@index([shareId])
  @@index([createdBy])
  @@map("website")
}

model Team {
  id         String    @id() @unique() @map("team_id") @db.VarChar(36)
  name       String    @db.VarChar(50)
  accessCode String?   @unique @map("access_code") @db.VarChar(50)
  logoUrl    String?   @map("logo_url") @db.VarChar(2183)
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt  DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt  DateTime? @map("deleted_at") @db.Timestamp(0)

  website  Website[]
  teamUser TeamUser[]

  @@index([accessCode])
  @@map("team")
}

model TeamUser {
  id        String    @id() @unique() @map("team_user_id") @db.VarChar(36)
  teamId    String    @map("team_id") @db.VarChar(36)
  userId    String    @map("user_id") @db.VarChar(36)
  role      String    @map("role") @db.VarChar(50)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  team Team @relation(fields: [teamId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@index([teamId])
  @@index([userId])
  @@map("team_user")
}

model Report {
  id          String    @id() @unique() @map("report_id") @db.VarChar(36)
  userId      String    @map("user_id") @db.VarChar(36)
  websiteId   String    @map("website_id") @db.VarChar(36)
  type        String    @map("type") @db.VarChar(200)
  name        String    @map("name") @db.VarChar(200)
  description String    @map("description") @db.VarChar(500)
  parameters  String    @map("parameters") @db.VarChar(6000)
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  user    User    @relation(fields: [userId], references: [id])
  website Website @relation(fields: [websiteId], references: [id])

  @@index([userId])
  @@index([websiteId])
  @@index([type])
  @@index([name])
  @@map("report")
}
